package com.revenat.ishop.infrastructure.framework.annotation.persistence.repository;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.sql.ResultSet;

import com.revenat.ishop.infrastructure.framework.handler.ResultSetHandler;
import com.revenat.ishop.infrastructure.framework.handler.base.DefaultResultSetHandler;
import com.revenat.ishop.infrastructure.framework.sql.SQLBuilder;

/**
 * This annotation is used to annotate repository interface method that should
 * use SQL Select query to retrieve some kind of data from underlaying
 * relational database.
 * 
 * @author Vitaly Dragun
 *
 */
@Target(ElementType.METHOD)
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Select {
	/**
	 * SQL string which must represent SELECT sql query
	 */
	String value();

	/**
	 * {@link ResultSetHandler} implementations for handling {@link ResultSet}
	 * generated by executing SQL query and transforming it into appropriate type.
	 */
	@SuppressWarnings("rawtypes")
	Class<? extends ResultSetHandler> resultSetHandlerClass() default DefaultResultSetHandler.class;

	/**
	 * {@link SQLBuilder} implementation for constructing SQL queries dynamically
	 * based on complex criteriaa presented as arguments of method annotated by such
	 * annotation.
	 */
	Class<? extends SQLBuilder> sqlBuilderClass() default SQLBuilder.class;

}
